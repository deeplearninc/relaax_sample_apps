environment:
  run: python environment/training.py
  name: Pendulum-v0
  max_episodes: 10000
  infinite_run: false

metrics:
  episode_reward: true
  server_latency: false
  action: false
  mu: false
  sigma2: false
  critic: true

relaax-metrics-server:
  bind: localhost:7002
  metrics_dir: logs/metrics
  log_metrics_to_console: false
  log_level: INFO

relaax-parameter-server:
  --bind: localhost:7000
  --checkpoint-dir: logs/checkpoints
  --log-level: INFO

relaax-rlx-server:
  --bind: localhost:7001
  --log-level: INFO

algorithm:
  name: da3c                      # short name for algorithm to load

  input:
    shape: [3]                    # shape of input state
    history: 1                    # number of consecutive states to stack
    use_convolutions: false       # set to true to process input by convolution layers

  output:
    continuous: true              # set to true to switch to continuous action space
    action_size: 1                # action size for the given environment
    action_high: []
    action_low: []
    scale: 1.0                    # multiplier to scale continuous output

  hidden_sizes: [24, 24]          # list of dense layers sizes, for ex. [128, 64]
  batch_size: 5                   # maximum batch size, which need to accumulate for one update

  use_icm: false                  # to use ICM, set to the True
  use_lstm: false                 # to use LSTM instead of FF, set to the True
  max_global_step: 20000000.0     # amount of maximum global steps to pass through the training

  entropy_beta: 0.01              # entropy regularization constant
  rewards_gamma: 0.99             # rewards discount factor
  use_gae: false                  # switcher for generalized advantage estimation
  gae_lambda: 1.0                 # lambda for generalized advantage estimation

  initial_learning_rate: 0.001    # initial learning rate, which can be anneal by some procedure
  critic_scale: 0.5               # to scale critic learning rate wrt initial learning rate

  gradients_norm_clipping: false  # gradients clipping by global norm, if false then it is ignored
  optimizer: Adam                 # name of optimizer to use within training

  RMSProp:                        # RMSProp optimizer specific parameters
    decay: 0.99
    epsilon: 0.1

  icm:                            # ICM relevant parameters
    nu: 0.01                      # prediction bonus, last=0.8
    beta: 0.2                     # forward loss importance against inverse
    lr: 1e-3                      # ICM learning rate
